"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[234],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=a.createContext({}),c=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(i.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(t),m=r,f=u["".concat(i,".").concat(m)]||u[m]||d[m]||o;return t?a.createElement(f,l(l({ref:n},p),{},{components:t})):a.createElement(f,l({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=u;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var c=2;c<o;c++)l[c]=t[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},2599:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>i});var a=t(7462),r=(t(7294),t(3905));const o={sidebar_position:1},l="ERC721 Token API",s={unversionedId:"nfts/player-ownership",id:"nfts/player-ownership",isDocsHomePage:!1,title:"ERC721 Token API",description:"About",source:"@site/docs/nfts/player-ownership.md",sourceDirName:"nfts",slug:"/nfts/player-ownership",permalink:"/nfts/player-ownership",editUrl:"https://github.com/NFT-Worlds/dev.nftworlds.com/edit/main/docs/nfts/player-ownership.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Tutorial: Creating and processing transactions",permalink:"/payments/tx-flow"},next:{title:"Selling Plots of Land for $WRLD",permalink:"/example-projects/plots"}},i=[{value:"About",id:"about",children:[],level:2},{value:"Function Usage",id:"function-usage",children:[{value:"Setup",id:"setup",children:[],level:3},{value:"getOwnedNFTs",id:"getownednfts",children:[],level:3},{value:"getOwnedNFTsFromContract",id:"getownednftsfromcontract",children:[],level:3},{value:"doesPlayerOwnNFTInCollection",id:"doesplayerownnftincollection",children:[],level:3}],level:2}],c={toc:i};function p(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"erc721-token-api"},"ERC721 Token API"),(0,r.kt)("h2",{id:"about"},"About"),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"/payments/wrld-payments-api"},"WRLD Payments API")," offers convenience functions for getting information about a player's NFT collection. These APIs have a variety of use-cases:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Offer exclusive perks to players who own an item in a certain collection."),(0,r.kt)("li",{parentName:"ul"},"Grant players one-of-a-kind items based on ownership of a specific item ID."),(0,r.kt)("li",{parentName:"ul"},"Fetch metadata about NFTs for item stats, images, etc.")),(0,r.kt)("h2",{id:"function-usage"},"Function Usage"),(0,r.kt)("h3",{id:"setup"},"Setup"),(0,r.kt)("p",null,"To use the WRLD API NFT convenience functions, you'll need:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"A globally accessible variable for your custom contract address. You can put this in your main plugin class."),(0,r.kt)("li",{parentName:"ol"},"A handle on a player wallet. You'll most likely be passed this through a Spigot event handler.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// In your main class:\npublic static final String MY_ERC721_TOKEN_CONTRACT_ADDRESS = "0x8d4100897447d173289560bc85c5c432be4f44e4";\n\n// In your event handler (or wherever you want):\nWallet myPlayerWallet = WRLDPaymentsCommands.getPayments().getNFTPlayer((Player) sender).getPrimaryWallet()\n')),(0,r.kt)("h3",{id:"getownednfts"},"getOwnedNFTs"),(0,r.kt)("p",null,"Lists all NFTs owned by the player. Returns a ",(0,r.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/5015844/parsing-json-object-in-java"},"JSONObject")," that does NOT contain metadata."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'JSONObject payload = myPlayerWallet.getOwnedNFTs(Network.ETHEREUM);\n// manipulate like any other JSON object...\nJSONArray ownedNFTs = (JSONArray) payload.get("ownedNfts");\n')),(0,r.kt)("p",null,"Example response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n   "blockHash":"0xd58b5bbf7dfa93bfee5f701260be2bd8569736a99de2261dbe6cceee377a06d6",\n   "ownedNfts":[\n      {\n         "balance":"1",\n         "contract":{\n            "address":"0x3d7f0f28ew3f32082e3de70ec4c9d1d59a07affb9"\n         },\n         "id":{\n            "tokenId":"0x000000000000000000000000000000000000000000000000000000000000a5cc"\n         }\n      },\n      {\n         "balance":"1",\n         "contract":{\n            "address":"0x47f75228dd28df8d6e7cawf332a47026b0dca99043"\n         },\n         "id":{\n            "tokenId":"0x00000000000000000000000000000000000000000000000000000000000003bc"\n         }\n      }\n   ],\n   "totalCount":2\n}\n')),(0,r.kt)("h3",{id:"getownednftsfromcontract"},"getOwnedNFTsFromContract"),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},'A "contract" is analagous with an NFT "collection"'))),(0,r.kt)("p",null,"Lists all NFTs owned by the player in a certain collection. Returns a ",(0,r.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/5015844/parsing-json-object-in-java"},"JSONObject")," that contains metadata."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"JSONObject payload = myPlayerWallet.getOwnedNFTsFromContract(Network.ETHEREUM, MY_ERC721_TOKEN_CONTRACT_ADDRESS);\n")),(0,r.kt)("p",null,"Example response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n   "blockHash":"0xd58b5bbf7dfa93bfee5f701260be2bd8569736a99de2261dbe6cceee377a06d6",\n   "ownedNfts":[\n      {\n        "metadata":{\n            "image":"https://ipfs.io/example",\n            "name":"A Super Special Experience Pass",\n            "description":"Lorem ipsum.",\n            "attributes":[\n               {\n                  "display_type":"string",\n                  "value":"VIP",\n                  "trait_type":"Access Level"\n               },\n               {\n                  "display_type":"number",\n                  "value":44,\n                  "trait_type":"Lucky Number"\n               }\n            ]\n         },\n         "balance":"1",\n         "contract":{\n            "address":"0x3d7f0f28ew3f32082e3de70ec4c9d1d59a07affb9"\n         },\n         "id":{\n            "tokenId":"0x000000000000000000000000000000000000000000000000000000000000a5cc"\n         }\n      },\n      {\n         "balance":"1",\n         "contract":{\n            "address":"0x47f75228dd28df8d6e7cawf332a47026b0dca99043"\n         },\n         "id":{\n            "tokenId":"0x00000000000000000000000000000000000000000000000000000000000003bc"\n         }\n      }\n   ],\n   "totalCount":2\n}\n\n')),(0,r.kt)("h3",{id:"doesplayerownnftincollection"},"doesPlayerOwnNFTInCollection"),(0,r.kt)("p",null,"Checks if a player owns at least one NFT in a collection. Returns a boolean."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"boolean shouldGrantClubAccess = myPlayerWallet.doesPlayerOwnNFTInCollection(\n    Network.ETHEREUM, MY_ERC721_TOKEN_CONTRACT_ADDRESS\n);\n")))}p.isMDXComponent=!0}}]);