"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[876],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=r,h=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return n?a.createElement(h,o(o({ref:t},c),{},{components:n})):a.createElement(h,o({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8925:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return c}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],l={sidebar_position:2},s="NPC Shopkeeper",p={unversionedId:"example-projects/npc",id:"example-projects/npc",isDocsHomePage:!1,title:"NPC Shopkeeper",description:"The source code for this example plugin can be viewed at https://github.com/NFT-Worlds/WRLD-Example-Projects/tree/main/wrld-npc-shopkeeper. We'll be using the Citizens API alongside Amp Menus to easily create custom menus and NPCs.",source:"@site/docs/example-projects/npc.md",sourceDirName:"example-projects",slug:"/example-projects/npc",permalink:"/example-projects/npc",editUrl:"https://github.com/NFT-Worlds/dev.nftworlds.com/edit/main/docs/example-projects/npc.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Selling Plots of Land for $WRLD",permalink:"/example-projects/plots"},next:{title:"Portals Between Worlds",permalink:"/portals"}},c=[{value:"Transaction payload",id:"transaction-payload",children:[],level:2},{value:"Creating a custom menu",id:"creating-a-custom-menu",children:[{value:"Custom items",id:"custom-items",children:[],level:3}],level:2},{value:"Creating a custom NPC trait",id:"creating-a-custom-npc-trait",children:[],level:2},{value:"Handling the PlayerTransactEvent",id:"handling-the-playertransactevent",children:[],level:2},{value:"Setting up a test server",id:"setting-up-a-test-server",children:[],level:2}],u={toc:c};function m(e){var t=e.components,l=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"npc-shopkeeper"},"NPC Shopkeeper"),(0,i.kt)("p",null,"The source code for this example plugin can be viewed at ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/NFT-Worlds/WRLD-Example-Projects/tree/main/wrld-npc-shopkeeper"},"https://github.com/NFT-Worlds/WRLD-Example-Projects/tree/main/wrld-npc-shopkeeper"),". We'll be using the ",(0,i.kt)("a",{parentName:"p",href:"https://wiki.citizensnpcs.co/API"},"Citizens API")," alongside ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Scarsz/AmpMenus"},"Amp Menus")," to easily create custom menus and NPCs."),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Get your hands dirty to learn quicker! Clone the examples repository and open this project using IntelliJ. Then run Maven ",(0,i.kt)("inlineCode",{parentName:"p"},"package")," and install the plugin on a test server."))),(0,i.kt)("p",null,"This example will cover implementing a Citizens custom trait that allows you to create NPC vendors that sell items for $WRLD."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Bob the Food Vendor in game",src:n(1103).Z})),(0,i.kt)("h2",{id:"transaction-payload"},"Transaction payload"),(0,i.kt)("p",null,"Our transaction payload for this example is very simple. It stores a single Bukkit ",(0,i.kt)("inlineCode",{parentName:"p"},"ItemStack")," containing the items purchased by the player:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class PlayerBuyItemPayload {\n    public ItemStack items;\n\n    public PlayerBuyItemPayload(ItemStack items) {\n        this.items = items;\n    }\n}\n")),(0,i.kt)("h2",{id:"creating-a-custom-menu"},"Creating a custom menu"),(0,i.kt)("p",null,"In our ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/NFT-Worlds/WRLD-Example-Projects/blob/main/wrld-npc-shopkeeper/src/main/java/com/nftworlds/wrldshopkeeper/WRLDShopkeeperPlugin.java"},"main plugin class"),", let's create a static ",(0,i.kt)("inlineCode",{parentName:"p"},"ItemMenu")," variable called ",(0,i.kt)("inlineCode",{parentName:"p"},"manu")," and configure it using the following in our ",(0,i.kt)("inlineCode",{parentName:"p"},"onEnable")," method:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'menu = new ItemMenu("Shop", ItemMenu.Size.TWO_LINE, plugin);\n\nmenu.setItem(17, new CloseItem());\nmenu.setItem(0, new AppleItem());\nmenu.setItem(1, new SteakItem());\n')),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"CloseItem")," is a built-in item that closes an ItemMenu. However, we need to implement ",(0,i.kt)("inlineCode",{parentName:"p"},"AppleItem")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"SteakItem")," ourself:"),(0,i.kt)("h3",{id:"custom-items"},"Custom items"),(0,i.kt)("p",null,"Here's the class for ",(0,i.kt)("inlineCode",{parentName:"p"},"AppleItem"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public class AppleItem extends MenuItem {\n    private static final String DISPLAY_NAME = ChatColor.RED + "Apples!";\n    private static final ItemStack ITEM = new ItemStack(Material.APPLE, 64);\n\n    public AppleItem() {\n        super(DISPLAY_NAME, ITEM);\n    }\n\n    // This method controls what happens when the MenuItem is clicked\n    @Override\n    public void onItemClick(ItemClickEvent event) {\n        PlayerBuyItemPayload payload = new PlayerBuyItemPayload(ITEM);\n        double price = 15.0;\n        WRLDShopkeeperPlugin.getPayments().getNFTPlayer(event.getPlayer()).requestWRLD(\n                price, Network.POLYGON, "Purchasing 64 apples", payload\n        );\n    }\n}\n')),(0,i.kt)("p",null,'This will display a stack of 64 apples titled "Apples" in red. When clicked it will create a WRLD payment request with the same items in a ',(0,i.kt)("inlineCode",{parentName:"p"},"PlayerBuyItemPayload"),"."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"SteakItem")," class looks almost identical:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public class SteakItem extends MenuItem {\n    private static final String DISPLAY_NAME = ChatColor.RED + "Cooked Beef!";\n    private static final ItemStack ITEM = new ItemStack(Material.COOKED_BEEF, 32);\n\n    public SteakItem() {\n        super(DISPLAY_NAME, ITEM);\n    }\n\n    // This method controls what happens when the MenuItem is clicked\n    @Override\n    public void onItemClick(ItemClickEvent event) {\n        PlayerBuyItemPayload payload = new PlayerBuyItemPayload(ITEM);\n        double price = 20.0;\n        WRLDShopkeeperPlugin.getPayments().getNFTPlayer(event.getPlayer()).requestWRLD(\n                price, Network.POLYGON, "Purchasing 32 cooked beef", payload\n        );\n    }\n}\n')),(0,i.kt)("h2",{id:"creating-a-custom-npc-trait"},"Creating a custom NPC trait"),(0,i.kt)("p",null,"Next, we need to create a custom trait for our NPCs that we want to use as WRLD shopkeepers. Citizens allows you to define custom traits to attach arbitrary logic to any NPCs which have your trait. To do this, we create a new class:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public class WRLDShopkeeperNPCTrait extends Trait {\n    WRLDShopkeeperPlugin plugin = null;\n\n    public WRLDShopkeeperNPCTrait() {\n        super("wrld-food-shopkeeper");\n        plugin = JavaPlugin.getPlugin(WRLDShopkeeperPlugin.class);\n    }\n\n    @EventHandler\n    public void onRightClick(NPCRightClickEvent event){\n        if (event.getNPC() != this.getNPC()) {\n            return;\n        }\n        WRLDShopkeeperPlugin.menu.open(event.getClicker());\n    }\n\n}\n')),(0,i.kt)("p",null,"Then, we need to register our custom trait in the ",(0,i.kt)("inlineCode",{parentName:"p"},"onEnable")," method of our main plugin class:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'net.citizensnpcs.api.CitizensAPI.getTraitFactory().\n    registerTrait(TraitInfo.create(WRLDShopkeeperNPCTrait.class)\n        .withName("wrld-food-shopkeeper"));\n')),(0,i.kt)("p",null,"Now, right clicking our NPC opens the menu we defined in the previous section:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Screenshot of our NPC shop GUI",src:n(863).Z})),(0,i.kt)("p",null,"Clicking any of these options will trigger a WRLD payment request."),(0,i.kt)("h2",{id:"handling-the-playertransactevent"},"Handling the PlayerTransactEvent"),(0,i.kt)("p",null,"Since all our item information is stored in the ",(0,i.kt)("inlineCode",{parentName:"p"},"PlayerBuyItemPayload"),", our ",(0,i.kt)("inlineCode",{parentName:"p"},"PlayerTransactEventListener")," can be very simple:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public class PlayerTransactEventListener implements Listener {\n\n    @EventHandler\n    public void onPlayerTransact(PlayerTransactEvent<?> e) {\n        if (e.getPayload() instanceof PlayerBuyItemPayload payload) {\n            e.getPlayer().sendMessage("Transaction complete!");\n            e.getPlayer().getInventory().addItem(payload.items);\n        }\n    }\n}\n')),(0,i.kt)("h2",{id:"setting-up-a-test-server"},"Setting up a test server"),(0,i.kt)("p",null,"Once you've compiled your plugin, place it in the ",(0,i.kt)("inlineCode",{parentName:"p"},"plugins")," folder of a Paper server alongside the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/NFT-Worlds/WRLD-Payments-API/releases"},"WRLD-Payments-API jarfile which you can download from GitHub"),". Additionally, you'll the ",(0,i.kt)("a",{parentName:"p",href:"https://www.spigotmc.org/resources/citizens.13811/"},"Citizens plugin")," as this example depends on it."),(0,i.kt)("p",null,"Once you're in game, you'll need to create an NPC and give it the ",(0,i.kt)("inlineCode",{parentName:"p"},"wrld-food-shopkeeper")," trait with the following sequence of commands:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"/npc create Bob the Food Vendor\n/trait add wrld-food-shopkeeper\n")),(0,i.kt)("p",null,"Now you should have a working food vendor NPC. You can customize the code in this example to perform any arbitrary task. In addition to selling items, you can sell ranks, cosmetics, mobs, event tickets, or whatever you can imagine!"))}m.isMDXComponent=!0},863:function(e,t,n){t.Z=n.p+"assets/images/shop-f4e63753ca4425848573560dbeed3dde.png"},1103:function(e,t,n){t.Z=n.p+"assets/images/vendor-77385f75530b8d15768401c38ae5c979.png"}}]);